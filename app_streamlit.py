import streamlit as st
import pandas as pd
import fitz
import tempfile
import os

TEMPLATE_PATH = "cracha_template.pdf"
PLANILHA_MODELO = "modelo_planilha.xlsx"

st.set_page_config(page_title="Gerador de Crach√°s", page_icon="ü™™")
st.title("ü™™ Gerador de Crach√°s - Caravanas ao Solo Sagrado de Guarapiranga")

# Bot√£o para baixar a planilha modelo
with open(PLANILHA_MODELO, "rb") as modelo:
    st.download_button(
        label="üìÑ Baixar Planilha Modelo",
        data=modelo,
        file_name="modelo_planilha.xlsx",
        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    )

# Instru√ß√µes para o usu√°rio
st.markdown("""
### üìù Como utilizar este gerador:

1. üìÑ Clique no bot√£o acima **"Baixar Planilha Modelo"** para obter o Excel padr√£o
2. ‚úçÔ∏è Preencha a planilha com os dados dos caravanistas
3. üì§ Envie a planilha preenchida no campo abaixo
4. ‚å®Ô∏è Preencha os campos padr√£o como hor√°rio, plataforma e respons√°vel
5. ‚öôÔ∏è Clique em **"Gerar Crach√°s"** para baixar o PDF pronto para impress√£o

---
‚ÑπÔ∏è Dica: os campos em branco na planilha ser√£o deixados vazios no crach√°.
""")

# Upload do Excel
df_file = st.file_uploader("üì• Envie a planilha preenchida (Excel)", type=["xlsx"])

# Campos adicionais
horario = st.text_input("Hor√°rio de Retorno:")
plataforma = st.text_input("Plataforma:")
responsavel = st.text_input("Respons√°vel:")
ddd = st.text_input("DDD:")
telefone = st.text_input("Telefone do Respons√°vel:")

if st.button("‚öôÔ∏è Gerar Crach√°s") and df_file:
    try:
        df = pd.read_excel(df_file)
        df.columns = df.columns.str.strip()
        grupos = [df[i:i + 4] for i in range(0, len(df), 4)]

        def seguro(valor):
            return "" if pd.isna(valor) or valor is None else str(valor).strip()

        pdf_saida = fitz.open()

        for grupo_idx, grupo_df in enumerate(grupos):
            doc = fitz.open(TEMPLATE_PATH)
            page = doc[0]
            widgets = list(page.widgets())

            for i, (_, pessoa) in enumerate(grupo_df.iterrows()):
                sufixo = "" if i == 0 else f" {i+1}"
                campos = {
                    f"NOME{sufixo}": seguro(pessoa.get("Nome Completo")),
                    f"IGREJA{sufixo}": seguro(pessoa.get("Unidade")),
                    f"POLTRONA{sufixo}": seguro(pessoa.get("Poltrona")),
                    f"HOR√ÅRIO DE RETORNO{sufixo}": horario,
                    f"PLATAFORMA{sufixo}": plataforma,
                    f"RESPONS√ÅVEL DA CARAVANA{sufixo}": responsavel,
                    f"DDD DO RESP{sufixo}": ddd,
                    f"TELEFONE DO RESPONS√ÅVEL{sufixo}": telefone,
                    f"CONV√äNIO M√âDICO{sufixo}": seguro(pessoa.get("Nome do Plano")),
                    f"TELEFONE DO CONV√äNIO{sufixo}": seguro(pessoa.get("Telefone do Plano")),
                    f"NOME DO CONTATO{sufixo}": seguro(pessoa.get("Nome Contato de Emerg√™ncia")),
                    f"TELEFONE DO CONTATO{sufixo}": seguro(pessoa.get("Telefone Contato de Emerg√™ncia"))
                }

                for widget in widgets:
                    nome = widget.field_name
                    if nome in campos:
                        widget.field_value = campos[nome]
                        widget.update()

            pdf_saida.insert_pdf(doc)
            doc.close()

        result_pdf = tempfile.NamedTemporaryFile(delete=False, suffix=".pdf")
        pdf_saida.save(result_pdf.name)
        pdf_saida.close()

        with open(result_pdf.name, "rb") as f:
            st.success("‚úÖ Crach√°s gerados com sucesso!")
            st.download_button("üìÅ Baixar PDF com os Crach√°s", f.read(), file_name="crachas_caravana.pdf")

    except Exception as e:
        st.error(f"‚ùå Erro ao gerar crach√°s: {e}")
